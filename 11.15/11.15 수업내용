Render Tree -리플로우,리페인트 > 화면 갱신


HTML - 데이터(Model)
CSS - 스타일(View)
JS - 동작(Controller)

*MVC (모델-뷰-컨트롤러) 는 사용자 인터페이스, 데이터 및 논리 제어를 구현하는데 널리 사용되는 소프트웨어 디자인 패턴이다.
 소프트웨어의 비즈니스 로직과 화면을 구분하는데 중점을 두고 있다.
-브라우저도 이 구조라고 생각

브라우저 내에서 JS = 일반적인 태그 <h1> <div>
style 태그
script 태그 - <script src= ....> (...) > JS파일 > 문자열 > 문 > 실행
            <script>...<script>
            문서의 아래쪽 dom처리
            문서의 윗쪽 > dom처리가 끝나면 이벤트 처리

EventHandler
     Listener   > ~를 해주세요
     처리기        등록 > 이벤트 루프(Single Thread)
               등록 = 콜백함수


DOM 이란 브라우저 화면에 보이는 요소를 조작하기 위한 기능으로 가득 차있는 각각의 라이브러리 덩어리입니다
추가설명 - https://webclub.tistory.com/218?category=501058

DOM처리는 가능하면 한번에 끝내주는 것이 좋다.

브라우저-JS-DOM
-------------------------------------------------------------------------
114p(아이디 선택자)  getElementById (옛날방식) >>>> querySelector (최근 방식)

태그 1) ID속성 주는 것 > 비추천 > 유니크해야하기 때문(unique) > html 동일한 id를 해도 문제를 잡아주지 않아서 문제를 모를 수 있음
Name 속성 주는 것 > 비추천 > 여러개를 사용할 수 있지만 값을 하나밖에 못준다
class속성 주는 것 > 동일한 css와 값을 여러개 줄 수있다

** 태그는 "p" = <p> /  id는 "#p"   /  css는 ".p"

form 태그란 웹 페이지에서의 입력 양식을 의미한다. 로그인 창이나, 회원가입 폼 등이 이에 해당한다.

input 태그란 전체 양식을 의미하며, 화면에 보이지 않는 추상적인 태그이다.
실제로 사용자가 양식을 입력하기 위한 태그는 <input> 태그 등이 사용된다.

시맨틱 태그 = 의미를 가지는 태그로 검색엔진때문에 나왔다.
------------------------------------------------------------------
책내용 실습 - *110p(css문법)  *114p(아이디 선택자)  *118p(자손, 자식 형제 결합자)  163p(마진과 패딩)


110p(css문법)

css문법에서 각각의 css 선언은 항상 ; 으로 끝나야 한다.
css는 기본적으로 html의 <head> 요소 내에서 <style>...</style> 안에 적어주면 된다.

-----------------------------------------------------------
118p(자손, 자식 형제 결합자)
s1 s2 -> s1요소에 포함된 s2 요소를 선택한다. (후손 관계)

s1 > s2 ->  s1요소의 직계 자식 요소인 s2를 선택한다. (자식 관계)




크롤링 - 검색엔진들이 돌아다니면서 컨텐츠들을 수집해서 결과로 출력

JS > c(생성)r(읽기) u(갱신) d(삭제)
1)연락처
2)to do (오늘 해야 할 일)
3)영화